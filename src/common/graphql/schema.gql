# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: ID!
  email: String!
  fullname: String!
  user_type: Float!
  isActive: String!
  isBlocked: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthResponse {
  token: String!
  user: User!
}

type Category {
  _id: ID!
  name: String!
  image: String
  isActive: String!
  createdAt: DateTime!
  updatedAt: DateTime!

  """Solo para obtener la imagen con cdn"""
  imageCDN: String
}

type Catype {
  _id: ID!
  name: String!
}

type Book {
  _id: ID!
  authorId: ID!
  title: String!
  description: String
  image: String
  categories: [Catype!]
  isActive: Boolean!
  isApproved: Boolean!
  isBlocked: Boolean!
  avgRating: Float!
  ratingCounts: Float!
  reviewCounts: Float!
  commentCounts: Float!
  totalComments: Float!
  total_chapters: Float!
  views: Float!
  authorName: String
  createdAt: DateTime!
  updatedAt: DateTime!
  isCompleted: Boolean!
  isPublished: Boolean!

  """Solo para obtener la imagen con cdn"""
  imageCDN: String
}

type BookListResponse {
  book: [Book!]!
  totalPagina: Float!
}

type Query {
  borra1(createUserInput: CreateUserInput!): User!
  borra2(createUserInput: CreateUserInput!): User!

  """Logea un usuario validado"""
  login(login: LoginInput!): AuthResponse!

  """Desarrollo solo, para comprobar token"""
  revisarToken: AuthResponse!

  """Trae todas las categorias"""
  getAllcategory: [Category!]!

  """Trare una categoria"""
  getIdcategory(id: ID!): Category!

  """Obtiene la lista de libros con query solo para usuarios"""
  getAllBook(query: QueryArgs!): BookListResponse!
}

input CreateUserInput {
  fullname: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input QueryArgs {
  page: Int!
  perPage: Int!
  categoryId: String!

  """views,avgRating"""
  sort: String
}

type Mutation {
  """Crea un usuario"""
  createUsers(addUser: SignupInput!): AuthResponse!

  """Permite al adm agregar categoria"""
  addCategory(createCategoryInput: CreateCategoryInput!): Category!

  """Permite al adm actualizar la categoria"""
  updateCategory(createCategoryInput: UpdateCategoryInput!): Category!

  """Permite al usuario agregar un libro"""
  addBook(addBookUser: CreateBookInput!): Book!

  """
  Permite al usuario actualizar su libro, esta validado que solo el autor quien creo el libro pueda actualizarlo
  """
  updateBookUser(updateBookInput: UpdateBookInput!): Book!
}

input SignupInput {
  fullname: String!
  email: String!
  password: String!
}

input CreateCategoryInput {
  name: String!
  image: String
}

input UpdateCategoryInput {
  name: String
  image: String
  id: String!

  """Permite desactivar alguna categoria"""
  isActive: Boolean
}

input CreateBookInput {
  title: String!
  description: String
  categories: [JSONObject!]!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

input UpdateBookInput {
  title: String
  description: String
  categories: [JSONObject!]
  id: String!

  """Si true y no false"""
  publicar: String

  """Si true y no false"""
  completado: String
}